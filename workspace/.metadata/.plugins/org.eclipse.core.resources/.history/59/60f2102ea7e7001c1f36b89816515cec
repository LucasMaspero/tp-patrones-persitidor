package persistidor.comandos;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;

import org.springframework.stereotype.Component;

import persistidor.entidades.Atributo;
import persistidor.entidades.Clase;
import persistidor.entidades.Objeto;
import persistidor.entidades.Valor;

@Component
public class ObtenerObjetosYValoresAsociadosAObjetoComando
{
	private List<Objeto> objetosAsociados;
	private List<Valor> valoresAsociados;
	
	public void ejecutar(Clase clase)
	{
		HashSet<Objeto> setClasesAsociadas = new HashSet<Objeto>();
		HashSet<Valor> setAtributosAsociados = new HashSet<Valor>();
		
		this.obtenerClasesYAtributosAsociados(clase, setClasesAsociadas, setAtributosAsociados);
		
		System.out.println(setClasesAsociadas.size());
		System.out.println(setClasesAsociadas.size());
		
		clasesAsociadas = new ArrayList<Clase>(setClasesAsociadas);
		atributosAsociados = new ArrayList<Atributo>(setAtributosAsociados);
	}
	
	private void obtenerObjetosYValoresAsociados(Objeto objeto, HashSet<Objeto> objetosAsociados, HashSet<Valor> valoresAsociados)
	{
		objetosAEliminar.add(objeto);

		for (Valor valor : objeto.getValores())
		{
			valoresAEliminar.add(valor);
			
			Objeto valorObjeto = valor.getValorObjeto();
			
			if (valorObjeto != null)
			{
				objetosYValoresAEliminar(valorObjeto, objetosAEliminar, valoresAEliminar);
			}
		}
	}

	public List<Objeto> getObjetosAsociados()
	{
		return objetosAsociados;
	}

	public List<Valor> getValoresAsociados()
	{
		return valoresAsociados;
	}
}
