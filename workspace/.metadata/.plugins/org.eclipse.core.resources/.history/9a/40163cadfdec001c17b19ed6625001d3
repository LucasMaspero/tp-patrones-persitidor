package persistidor.api;

import persistidor.excepciones.NoExisteSesionException;
import persistidor.excepciones.TipoInvalidoException;
import persistidor.excepciones.StructureChangedException;

public interface IPersistentObject
{
	/**
     * Almacena la instancia del objeto o asociada a la clave sId, 
     * o actualiza la instancia existente retornando true o false 
     * segun actualiza o almacena. 
     * El objeto o puede ser null, en tal caso el valor que se 
     * almacenara sera null.
    **/
	boolean store(long sId, Object o) throws TipoInvalidoException;
	
	/**
     * Devuelve la instancia del objeto o asociada a la clave sId.
    **/
	<T> T load(long sId, Class<T> clazz) throws NoExisteSesionException, StructureChangedException;
	
	/**
     * Retorna true o false seg√∫n exista o un una instancia
     * de clazz (aunque sea null) asociada a la clave sId.
    **/
	<T> boolean exists(long sId, Class<T> clazz) throws NoExisteSesionException;
	
	/**
     * Retorna (en milisegundos) el tiempo transcurrido 
     * desde el ultimo acceso registrado para la clave sId, 
     * sin considerar las llamadas a este metodo ni a exists.
    **/
	long elapsedTime(long sId) throws NoExisteSesionException;
	
	/**
     * retorna y elimina la instancia de clazz vinculada a la
     * clave sId, o retorna null si no existe dicha instancia
    **/
	<T> T delete(long sId, Class<T> clazz) throws NoExisteSesionException, StructureChangedException;
}
