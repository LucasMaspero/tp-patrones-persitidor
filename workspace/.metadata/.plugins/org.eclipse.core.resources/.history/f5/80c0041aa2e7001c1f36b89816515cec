package persistidor.servicios;

import java.util.HashSet;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import persistidor.entidades.Atributo;
import persistidor.entidades.Clase;
import persistidor.entidades.Objeto;
import persistidor.entidades.Valor;
import persistidor.repositorios.RepositorioDeAtributos;
import persistidor.repositorios.RepositorioDeClases;
import persistidor.repositorios.RepositorioDeObjetos;
import persistidor.repositorios.RepositorioDeValores;

@Service
public class ServicioDeClases
{
	@Autowired
	private RepositorioDeAtributos repositorioDeAtributos;
	
	@Autowired
	private RepositorioDeClases repositorioDeClases;
	
	public void eliminarClasePorId(long idClase)
	{
		Clase clasePadre = repositorioDeClases.findById(idClase).orElse(null);
		
		HashSet<Clase> clasesAEliminar = new HashSet<Clase>();
		HashSet<Atributo> atributosAEliminar = new HashSet<Atributo>();
		clasesYAtributosAEliminar(clasePadre, clasesAEliminar, atributosAEliminar);
		
		for (Atributo atributo : atributosAEliminar)
		{
			if (atributo.tieneRelaciones())
			{
				atributo.limpiarRelaciones();
				repositorioDeAtributos.save(atributo);
			}
		}
		
		for (Clase clase : clasesAEliminar)
		{
			clase.limpiarRelaciones();
			repositorioDeClases.save(clase);
			repositorioDeClases.deleteById(clase.getId());
		}
	}
	
	private void clasesYAtributosAEliminar(Clase clase, HashSet<Clase> clasesAEliminar, HashSet<Atributo> atributosAEliminar)
	{
		clasesAEliminar.add(clase);

		for (Atributo atributo : clase.getAtributos())
		{
			atributosAEliminar.add(atributo);
			
			Clase claseTipo = atributo.getTipoClase();
			
			if (claseTipo != null)
			{
				clasesYAtributosAEliminar(claseTipo, clasesAEliminar, atributosAEliminar);
			}
		}
	}
}
