package persistidor.comandos;

import java.lang.reflect.Field;
import java.util.Collection;
import java.util.List;

import org.springframework.stereotype.Component;

import persistidor.entidades.Atributo;
import persistidor.entidades.Clase;
import persistidor.entidades.Primitivo;
import persistidor.excepciones.TipoOValorInvalidoException;

@Component
public class CrearEntidadAtributoDesdeFieldComando
{
	private Atributo crearEntidadAtributo(Field atributo, List<Clase> entidadesClaseYaCreadas) throws TipoOValorInvalidoException
	{
		String nombreDeAtributo = atributo.getName();
		Class<?> claseDelAtributo = atributo.getType();
		String nombreDeClaseDelAtributo = claseDelAtributo.getTypeName();
		String nombreNormalizadoDeClaseDelAtributo = normalizarNombreDeClase(nombreDeClaseDelAtributo);
		
		if (!verificarSiClaseEsUnTipoValidoComando.ejecutar(claseDelAtributo))
		{
			throw new TipoOValorInvalidoException("PeristentObject NO guarda objects de tipo " + nombreNormalizadoDeClaseDelAtributo);
		}
		
		boolean esColeccion = Collection.class.isAssignableFrom(claseDelAtributo);
		
		if (esColeccion)
		{
			claseDelAtributo = obtenerGenericDeColeccion(atributo);
			nombreDeClaseDelAtributo = claseDelAtributo.getTypeName();
			nombreNormalizadoDeClaseDelAtributo = normalizarNombreDeClase(nombreDeClaseDelAtributo);
		}
		
		boolean esPrimitivo = verificarSiClaseEsUnPrimitivoComando.ejecutar(claseDelAtributo);
		
		if (esPrimitivo)
		{
			Primitivo entidadPrimitivo = servicioDePrimitivos.ObtenerPrimitivoPorNombre(nombreNormalizadoDeClaseDelAtributo);
			return new Atributo(nombreDeAtributo, entidadPrimitivo, esColeccion);
		}
		
		Clase entidadClaseDelAtributo = null;
		for (Clase entidadClaseYaCreada : entidadesClaseYaCreadas)
		{
			if (entidadClaseYaCreada.getNombre() == nombreNormalizadoDeClaseDelAtributo)
			{
				entidadClaseDelAtributo = entidadClaseYaCreada;
				break;
			}
		}
		
		if (entidadClaseDelAtributo == null)
		{
			entidadClaseDelAtributo = crearEntidadClase(claseDelAtributo, entidadesClaseYaCreadas);
			entidadesClaseYaCreadas.add(entidadClaseDelAtributo);
		}
		
		return new Atributo(nombreDeAtributo, entidadClaseDelAtributo, esColeccion);
	}
}
